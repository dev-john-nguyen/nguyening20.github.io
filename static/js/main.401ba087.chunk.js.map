{"version":3,"sources":["phone.svg","images/profile-image.jpeg","App.js","index.js"],"names":["calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","App","useSpring","xy","config","mass","tension","friction","props","set","useState","flipped","setFlipped","opacity","transform","showContact","setShowContact","name","setName","email","setEmail","message","setMessage","sent","setSent","loading","setLoading","generateRandomSize","min","max","randomNum","Math","random","size","floor","height","width","className","onClick","src","PhoneSvg","alt","undefined","onSubmit","alert","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","htmlFor","type","id","onChange","e","target","value","required","ProfileImage","onMouseMove","clientX","clientY","div","style","interpolate","state","o","t","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.401ba087.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/phone.5536a79d.svg\";","export default __webpack_public_path__ + \"static/media/profile-image.3c34597e.jpeg\";","import React, { useState } from 'react';\nimport PhoneSvg from './phone.svg'\nimport ProfileImage from './images/profile-image.jpeg';\nimport { useSpring, animated } from 'react-spring';\nimport './App.scss';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 9}px,${y / 9}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 5}px,${y / 5}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 2}px,${y / 2}px,0)`\nconst trans4 = (x, y) => `translate3d(${x / 7}px,${y / 7}px,0)`\n\nconst App = () => {\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n    const [flipped, setFlipped] = useState(false)\n    const { transform, opacity } = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: { mass: 5, tension: 500, friction: 80 }\n    })\n    const [showContact, setShowContact] = useState();\n    const [name, setName] = useState();\n    const [email, setEmail] = useState();\n    const [message, setMessage] = useState();\n    const [sent, setSent] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const generateRandomSize = () => {\n        const min = window.innerWidth / 10;\n        const max = window.innerWidth / 5;\n        const randomNum = Math.random()\n        const size = min + Math.floor(randomNum * (max - min) + 1);\n        return {\n            height: size,\n            width: size,\n        }\n    }\n\n    const sendEmail = () => {\n        if (!name || !message || !email) return alert('All fields required')\n        setLoading(true)\n\n        fetch(\"https://formsubmit.co/ajax/6fb9b6db755f974fe6a7d77b04c47d75\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                message: message,\n                email: email\n            })\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setLoading(false)\n                setSent(true)\n            })\n            .catch(error => {\n                console.log(error)\n                alert('Sorry, something went wrong trying to send your request. Please try again.')\n                setLoading(false)\n            });\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"circle circle__grey\" />\n            <div className=\"contact\">\n                <div className=\"contact__content\">\n                    <div className=\"contact__icon\" onClick={() => setShowContact(showContact ? false : true)}>\n                        <img\n                            src={PhoneSvg}\n                            alt='phone'\n                        />\n                    </div>\n                    <div className={`contact__form ${showContact === undefined ? 'contact__close' : showContact ? 'contact__show' : 'contact__hide'}`}>\n                        <form className=\"contact__form__content\" onSubmit={sendEmail}>\n                            <h2>{sent ? \"Thank you!\" : \"Contact\"}</h2>\n                            <label htmlFor='name'>Name</label>\n                            <input\n                                type=\"text\"\n                                className=\"contact__form__name\"\n                                id='name'\n                                name='name'\n                                onChange={(e) => setName(e.target.value)}\n                                required\n                            />\n                            <label htmlFor='email'>Email</label>\n                            <input\n                                type=\"email\"\n                                className=\"contact__form__email\"\n                                id='email'\n                                name='email'\n                                onChange={(e) => setEmail(e.target.value)}\n                                required\n                            />\n                            <label htmlFor='message'>Message</label>\n                            <textarea type=\"text\" className=\"contact__form__message\" id='message' name='message' onChange={(e) => setMessage(e.target.value)} required />\n                            <input\n                                type='submit'\n                                className=\"contact__form__submit\"\n                                value={loading ? 'Loading...' : 'Send'}\n                            />\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <div className=\"header\">\n\n                <div className=\"header__image\">\n                    <img\n                        src={ProfileImage}\n                        alt='profile'\n                    />\n                </div>\n                <div className=\"header__content\">\n                    <div className=\"header__content_container\">\n                        <h1>Hi! I'm John.</h1>\n                        <h1>Welcome To My Portfolio!</h1>\n                        <h1>My Skills</h1>\n                        <h2>ReactJs</h2>\n                        <h3>Full Stack</h3>\n                        <div className=\"full-stack\">\n                            <h3>M</h3><p>ongoDb</p>\n                            <h3>E</h3><p>xpress</p>\n                            <h3>R</h3><p>eact</p>\n                            <h3>N</h3><p>ode</p>\n                        </div>\n                        <h3>React Native</h3>\n                    </div>\n                </div>\n                <div className=\"header__empty\" />\n            </div>\n\n            <div className=\"divider\">\n                <h1 className=\"divider__header\">\n                    Projects\n                </h1>\n            </div>\n\n            <div className=\"section\">\n                <div className=\"circle circle__brown\" />\n                <div className=\"section__header\">\n                    <h1 className=\"section__header__text\">\n                        My First Project\n                    </h1>\n                </div>\n                <div className=\"section__description\">\n                    <p className=\"section__description__text\">\n                        <strong className='section__description__text__emphasize emphasize'>Books & Brewskies</strong> is a ecommerce, blog, and podcast website created to be the main hub where customers can access blog content, buy merchandise, and redirect to other platforms to listen to the podcast.\n                    </p>\n                </div>\n                <div className=\"section__image__first\" />\n                <div className=\"section__traits\" onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })} >\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans1), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">MongoDb</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans2), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Blog</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans3), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">NodeJs</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans4), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Stripe</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans2), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Express</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans3), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Admin Panel</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans4), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Sass</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans1), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">ReactJs</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_first\" style={{ transform: props.xy.interpolate(trans4), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Store</p>\n                    </animated.div>\n                </div>\n            </div>\n\n\n            <div className=\"section\">\n                <div className=\"circle circle__blue\" />\n                <div className=\"section__header\">\n                    <h1 className=\"section__header__text\">\n                        My Second Project\n                    </h1>\n                </div>\n                <div className=\"section__description\">\n                    <p className=\"section__description__text\">\n                        <strong className='section__description__text__emphasize emphasize'>LetsLink</strong> is a social media application targeted for IOS. The purpose of the app is to allow people to easily meet other people in public. The point was to motivate people to go out in public and meet other people. The app shows other users within a 100 meter radius. There are two views, map and list view, in which a user can access their profiles, send invitations, and connect. Lets just say that this app makes “breaking the ice” even easier.\n                    </p>\n                </div>\n                <div className=\"section__image__second\" />\n                <div className=\"section__traits\" onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })} >\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans1), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Firebase</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans3), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Location</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans2), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Maps</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans1), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Exp</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans4), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Cache</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans2), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Notifications</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans3), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">React Native</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans1), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Auth</p>\n                    </animated.div>\n                    <animated.div className=\"section__traits__item_second\" style={{ transform: props.xy.interpolate(trans3), ...generateRandomSize() }}>\n                        <p className=\"section__traits__item__text\">Friends</p>\n                    </animated.div>\n                </div>\n            </div>\n\n            <div className=\"divider\">\n                <h1 className=\"divider__header\">\n                    Resume\n                </h1>\n            </div>\n\n            <div className=\"resume\">\n                <div className='resume__content' onClick={() => setFlipped(state => !state)}>\n                    <animated.div className=\"c back\" style={{ opacity: opacity.interpolate(o => 1 - o), transform }} />\n                    <animated.div className=\"c front\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }} />\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}